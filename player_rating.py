{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import sqlite3\n",
    "\n",
    "cnx = sqlite3.connect('database.sqlite')\n",
    "\n",
    "# initialisieren der Dataframes, die nicht durch SQL-Abfragen erzeugt/befüllt werden\n",
    "df_all_players_home = pd.DataFrame()\n",
    "df_all_players_away = pd.DataFrame()\n",
    "df_overall_home_ratings = pd.DataFrame()\n",
    "df_overall_away_ratings = pd.DataFrame()\n",
    "\n",
    "\n",
    "# Besorgen der SpielID, Anzahl der Heimtore und Auswärtstore\n",
    "df_match_info = pd.read_sql('''Select\n",
    "    Match.match_api_id AS SpielID,\n",
    "    Match.home_team_goal AS Heimtore,\n",
    "    Match.away_team_goal AS Auswärtstore\n",
    "FROM Match\n",
    "WHERE Match.home_team_api_id = 8634''', cnx)\n",
    "\n",
    "\n",
    "# dynamische query für die Spielernamen und IDs der 11 Heim-Spieler einer bestimmten Mannschaft      \n",
    "for i in range(1, 12):\n",
    "    query = '''SELECT\n",
    "        Match.home_player_''' + str(i) + ''' AS HomeSpieler''' + str(i) + ''',\n",
    "        Player.player_name AS HomeSpielername''' + str(i) + '''\n",
    "    FROM Match\n",
    "    INNER JOIN Team ON Match.home_team_api_id == Team.team_api_id\n",
    "    INNER JOIN Player ON Match.home_player_''' + str(i) + ''' == Player.player_api_id\n",
    "    WHERE Match.home_team_api_id = 8634'''\n",
    "    df_tmp = pd.read_sql(query, cnx)\n",
    "    df_all_players_home = pd.concat([df_all_players_home, df_tmp], axis=1, join=\"outer\")\n",
    "\n",
    "df = pd.concat([df_match_info, df_all_players_home], axis=1, join=\"outer\")\n",
    "df = df.dropna()\n",
    "\n",
    "\n",
    "# dynamische query für die Spielernamen und IDs der 11 Auswärts-Spieler     \n",
    "for i in range(1, 12):\n",
    "    query = '''SELECT\n",
    "        Match.away_player_''' + str(i) + ''' AS AwaySpieler''' + str(i) + ''',\n",
    "        Player.player_name AS AwaySpielername''' + str(i) + '''\n",
    "    FROM Match\n",
    "    INNER JOIN Team ON Match.home_team_api_id == Team.team_api_id\n",
    "    INNER JOIN Player ON Match.away_player_''' + str(i) + ''' == Player.player_api_id\n",
    "    WHERE Match.home_team_api_id = 8634'''\n",
    "    df_tmp = pd.read_sql(query, cnx)\n",
    "    df_all_players_away = pd.concat([df_all_players_away, df_tmp], axis=1, join=\"outer\")\n",
    "\n",
    "df = pd.concat([df, df_all_players_away], axis=1, join=\"outer\")\n",
    "df = df.dropna()\n",
    "\n",
    "# Trennen der Home- und Away-Spieler IDs von den restlichen Daten des Dataframes mit allen abgefragten Daten\n",
    "df_home_player_ids = df[['HomeSpieler1', 'HomeSpieler2', 'HomeSpieler3', 'HomeSpieler4', 'HomeSpieler5', 'HomeSpieler6', 'HomeSpieler7', 'HomeSpieler8', 'HomeSpieler9', 'HomeSpieler10', 'HomeSpieler11']]\n",
    "df_away_player_ids = df[['AwaySpieler1', 'AwaySpieler2', 'AwaySpieler3', 'AwaySpieler4', 'AwaySpieler5', 'AwaySpieler6', 'AwaySpieler7', 'AwaySpieler8', 'AwaySpieler9', 'AwaySpieler10', 'AwaySpieler11']]\n",
    "\n",
    "\n",
    "# gerade nur auslesen des ersten Heimspiels des FC Barcelona und das Besorgen der durchschnittlichen Overall Ratings der Spieler des FC Barcelona dieses Spiels\n",
    "for i, row in df_home_player_ids.iterrows():\n",
    "    while i < 1:\n",
    "        y = 0\n",
    "        for i in range(1, 12):\n",
    "            query = '''SELECT\n",
    "                        AVG(Player_Attributes.overall_rating) AS RatingGesamt,\n",
    "                        Player_Attributes.player_api_id AS SpielerID\n",
    "                    FROM Player_Attributes\n",
    "                    WHERE Player_Attributes.player_api_id = ''' + str(int(row[y]))\n",
    "            df_tmp = pd.read_sql(query, cnx)\n",
    "            df_overall_home_ratings = pd.concat([df_overall_home_ratings, df_tmp])\n",
    "            y = y + 1\n",
    "\n",
    "\n",
    "# Besorgen der durchschnittlichen Overall Ratings der Spieler des ersten Auswärtsgegners des FC Barcelona\n",
    "for i, row in df_away_player_ids.iterrows():\n",
    "    while i < 1:\n",
    "        y = 0\n",
    "        for i in range(1, 12):\n",
    "            query = '''SELECT\n",
    "                        AVG(Player_Attributes.overall_rating) AS RatingGesamt,\n",
    "                        Player_Attributes.player_api_id AS SpielerID\n",
    "                    FROM Player_Attributes\n",
    "                    WHERE Player_Attributes.player_api_id = ''' + str(int(row[y]))\n",
    "            df_tmp = pd.read_sql(query, cnx)\n",
    "            df_overall_away_ratings = pd.concat([df_overall_away_ratings, df_tmp])\n",
    "            y = y + 1\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.2"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
